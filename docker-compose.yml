version: "3"

services:
  frontend:
    build: client
    container_name: client
    restart: always
    ports:
      - 127.0.0.1:3200:3200
    stdin_open: true
    environment:
      NODE_ENV: development
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - react-express
    depends_on:
      - backend

  backend:
    build: server
    container_name: server
    restart: always
    ports:
      - 127.0.0.1:5000:5000
    environment:
      MONGO_URI: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongo:27017/project-mgmt-graphql
      NODE_ENV: development
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - mongo
    networks:
      - express-mongo
      - react-express

  mongo:
    image: mongo:6.0.3
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: project-mgmt-graphql
    ports:
      - "0.0.0.0:27018:27017"
    volumes:
      - mongo_data_container:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - express-mongo
    expose:
      - 27017

  proxy:
    build: 
      dockerfile: Dockerfile
      context: "./proxy"
    restart: always
    ports:
      - "127.0.0.1:${PROXY_PORT}:8080"
    networks:
      - react-express

networks:
  react-express:
  express-mongo:

volumes:
  mongo_data_container: